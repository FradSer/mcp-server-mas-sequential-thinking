[tool:pytest]
# Pytest configuration for MCP Sequential Thinking Server

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --cov=src/mcp_server_mas_sequential_thinking
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=70

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    security: Security-related tests
    config: Configuration and environment tests
    slow: Tests that take a long time to run
    asyncio: Tests that use asyncio

# Asyncio configuration
asyncio_mode = auto

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:agno.*

# Test output
junit_family = xunit2
junit_logging = all

# Coverage configuration
[coverage:run]
source = src/mcp_server_mas_sequential_thinking
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov